import streamlit as st
import pandas as pd
import xlsxwriter
import io

# Configuraci칩n inicial
st.set_page_config(page_title="Valorador Docente - UCCuyo", layout="centered")
st.title("游꿉 Universidad Cat칩lica de Cuyo")
st.subheader("Secretar칤a de Investigaci칩n")
st.markdown("### Valorador Docente - Resoluci칩n 897")

# Ingreso del nombre del docente
docente = st.text_input("Nombre completo del docente:")

# Diccionario de bloques con 칤tems y puntajes m치ximos
bloques = {
    "Formaci칩n Acad칠mica (Max: 480)": [
        ("T칤tulos de Grado", 30),
        ("Cursos de Postgrado", 75),
        ("Especializaciones", 75),
        ("Maestr칤as", 150),
        ("Doctorados", 250)
    ],
    "Docencia Universitaria (Max: 350)": [
        ("Profesor Titular", 200),
        ("Profesor Asociado", 160),
        ("Profesor Adjunto", 120),
        ("JTP", 80),
        ("Ayudante 1ra", 40),
        ("Tribunal Concursos", 60),
        ("Docencia en Postgrados acreditados", 100),
        ("Docencia en Postgrados no acreditados", 50),
        ("Tribunal de Tesis", 60)
    ],
    "Investigaci칩n Cient칤fica (Max: 350)": [
        ("Direcci칩n de Programa", 200),
        ("Co-direcci칩n de Programa", 150),
        ("Direcci칩n de Proyecto", 150),
        ("Co-direcci칩n Proyecto", 100),
        ("Integrante con al menos 1 a침o", 60),
        ("Auxiliar, becario o adscripto", 30)
    ]
}

puntajes_totales = {}
total_general = 0

st.markdown("---")

# Carga de puntajes por bloque
def ingresar_bloque(nombre, items):
    st.markdown(f"#### {nombre}")
    subtotal = 0
    for item, maximo in items:
        valor = st.number_input(f"{item} (hasta {maximo} pts):", min_value=0, max_value=maximo, step=1, key=f"{nombre}-{item}")
        subtotal += valor
    st.markdown(f"**Subtotal: {subtotal} puntos**")
    return subtotal

for bloque, items in bloques.items():
    subtotal = ingresar_bloque(bloque, items)
    puntajes_totales[bloque] = subtotal
    total_general += subtotal

st.markdown("---")
st.markdown(f"### Total general: **{total_general} puntos**")

# Asignar categor칤a
if total_general >= 900:
    categoria = "Investigador Categor칤a I"
elif total_general >= 700:
    categoria = "Investigador Categor칤a II"
elif total_general >= 500:
    categoria = "Investigador Categor칤a III"
elif total_general >= 300:
    categoria = "Investigador en formaci칩n"
else:
    categoria = "No categorizado"

st.success(f"Categor칤a alcanzada: **{categoria}**")

# Generar Excel descargable
if st.button("游닌 Descargar informe Excel"):
    output = io.BytesIO()
    writer = pd.ExcelWriter(output, engine='xlsxwriter')

    df = pd.DataFrame([
        {"Bloque": bloque, "Puntaje obtenido": puntos, "Puntaje m치ximo": sum([p for _, p in bloques[bloque]])}
        for bloque, puntos in puntajes_totales.items()
    ])
    df.loc[len(df.index)] = ["TOTAL GENERAL", total_general, ""]
    df.loc[len(df.index)] = ["CATEGOR칈A", categoria, ""]
    df.to_excel(writer, index=False, sheet_name="Informe")
    writer.close()
    output.seek(0)

    st.download_button(
        label="Descargar informe personalizado",
        data=output,
        file_name=f"Informe_{docente.replace(' ', '_')}.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )
